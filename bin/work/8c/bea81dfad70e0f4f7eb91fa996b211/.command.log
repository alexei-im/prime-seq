Multicore support not enabled. Proceeding with single-core trimming.
Path to Cutadapt set as: 'cutadapt' (default)
Cutadapt seems to be working fine (tested command 'cutadapt --version')
Cutadapt version: 4.9
single-core operation.
igzip command line interface 2.31.0
igzip detected. Using igzip for decompressing

No quality encoding type selected. Assuming that the data provided uses Sanger encoded Phred scores (default)



AUTO-DETECTING ADAPTER TYPE
===========================
Attempting to auto-detect adapter type from the first 1 million sequences of the first file (>> SRR005_1.fastq.gz <<)

Found perfect matches for the following adapter sequences:
Adapter type	Count	Sequence	Sequences analysed	Percentage
Illumina	2	AGATCGGAAGAGC	10000	0.02
smallRNA	0	TGGAATTCTCGG	10000	0.00
Nextera	0	CTGTCTCTTATA	10000	0.00
Using Illumina adapter for trimming (count: 2). Second best hit was smallRNA (count: 0)

Writing report to 'SRR005_1.fastq.gz_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: SRR005_1.fastq.gz
Trimming mode: paired-end
Trim Galore version: 0.6.10
Cutadapt version: 4.9
Number of cores used for trimming: 1
Quality Phred score cutoff: 20
Quality encoding type selected: ASCII+33
Adapter sequence: 'AGATCGGAAGAGC' (Illumina TruSeq, Sanger iPCR; auto-detected)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 20 bp
Running FastQC on the data once trimming has completed
Output file(s) will be GZIP compressed

Cutadapt seems to be fairly up-to-date (version 4.9). Setting -j 1
Writing final adapter and quality trimmed output to SRR005_1_trimmed.fq.gz


  >>> Now performing quality (cutoff '-q 20') and adapter trimming in a single pass for the adapter sequence: 'AGATCGGAAGAGC' from file SRR005_1.fastq.gz <<< 
This is cutadapt 4.9 with Python 3.12.7
Command line parameters: -j 1 -e 0.1 -q 20 -O 1 -a AGATCGGAAGAGC SRR005_1.fastq.gz
Processing single-end reads on 1 core ...
Finished in 0.155 s (15.511 µs/read; 3.87 M reads/minute).

=== Summary ===

Total reads processed:                  10,000
Reads with adapters:                     3,161 (31.6%)
Reads written (passing filters):        10,000 (100.0%)

Total basepairs processed:       280,000 bp
Quality-trimmed:                     221 bp (0.1%)
Total written (filtered):        274,706 bp (98.1%)

=== Adapter 1 ===

Sequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 3161 times

Minimum overlap: 1
No. of allowed errors:
1-9 bp: 0; 10-13 bp: 1

Bases preceding removed adapters:
  A: 33.3%
  C: 31.8%
  G: 24.3%
  T: 10.6%
  none/other: 0.0%

Overview of removed sequences
length	count	expect	max.err	error counts
1	1867	2500.0	0	1867
2	760	625.0	0	760
3	488	156.2	0	488
4	41	39.1	0	41
7	2	0.6	0	2
12	1	0.0	1	1
13	1	0.0	1	1
19	1	0.0	1	1

RUN STATISTICS FOR INPUT FILE: SRR005_1.fastq.gz
=============================================
10000 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Writing report to 'SRR005_2.fastq.gz_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: SRR005_2.fastq.gz
Trimming mode: paired-end
Trim Galore version: 0.6.10
Cutadapt version: 4.9
Number of cores used for trimming: 1
Quality Phred score cutoff: 20
Quality encoding type selected: ASCII+33
Adapter sequence: 'AGATCGGAAGAGC' (Illumina TruSeq, Sanger iPCR; auto-detected)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 20 bp
Running FastQC on the data once trimming has completed
Output file(s) will be GZIP compressed

Cutadapt seems to be fairly up-to-date (version 4.9). Setting -j -j 1
Writing final adapter and quality trimmed output to SRR005_2_trimmed.fq.gz


  >>> Now performing quality (cutoff '-q 20') and adapter trimming in a single pass for the adapter sequence: 'AGATCGGAAGAGC' from file SRR005_2.fastq.gz <<< 
This is cutadapt 4.9 with Python 3.12.7
Command line parameters: -j 1 -e 0.1 -q 20 -O 1 -a AGATCGGAAGAGC SRR005_2.fastq.gz
Processing single-end reads on 1 core ...
Finished in 0.441 s (44.062 µs/read; 1.36 M reads/minute).

=== Summary ===

Total reads processed:                  10,000
Reads with adapters:                     4,831 (48.3%)
Reads written (passing filters):        10,000 (100.0%)

Total basepairs processed:       940,000 bp
Quality-trimmed:                   3,050 bp (0.3%)
Total written (filtered):        929,530 bp (98.9%)

=== Adapter 1 ===

Sequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 4831 times

Minimum overlap: 1
No. of allowed errors:
1-9 bp: 0; 10-13 bp: 1

Bases preceding removed adapters:
  A: 63.3%
  C: 15.2%
  G: 9.6%
  T: 12.0%
  none/other: 0.0%

Overview of removed sequences
length	count	expect	max.err	error counts
1	4038	2500.0	0	4038
2	539	625.0	0	539
3	137	156.2	0	137
4	36	39.1	0	36
5	11	9.8	0	11
6	4	2.4	0	4
7	3	0.6	0	3
8	2	0.2	0	2
9	5	0.0	0	5
10	5	0.0	1	5
11	2	0.0	1	0 2
12	4	0.0	1	3 1
13	1	0.0	1	1
15	3	0.0	1	1 2
16	1	0.0	1	1
17	1	0.0	1	1
18	1	0.0	1	0 1
19	4	0.0	1	2 2
20	2	0.0	1	2
21	2	0.0	1	2
22	1	0.0	1	1
23	3	0.0	1	2 1
24	10	0.0	1	7 3
26	1	0.0	1	0 1
27	2	0.0	1	2
31	1	0.0	1	1
33	1	0.0	1	1
37	1	0.0	1	1
55	1	0.0	1	0 1
56	1	0.0	1	1
62	1	0.0	1	1
64	1	0.0	1	1
68	1	0.0	1	1
72	1	0.0	1	1
73	1	0.0	1	1
77	2	0.0	1	2
85	1	0.0	1	1

RUN STATISTICS FOR INPUT FILE: SRR005_2.fastq.gz
=============================================
10000 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Validate paired-end files SRR005_1_trimmed.fq.gz and SRR005_2_trimmed.fq.gz
file_1: SRR005_1_trimmed.fq.gz, file_2: SRR005_2_trimmed.fq.gz


>>>>> Now validing the length of the 2 paired-end infiles: SRR005_1_trimmed.fq.gz and SRR005_2_trimmed.fq.gz <<<<<
Writing validated paired-end Read 1 reads to SRR005_1_val_1.fq.gz
Writing validated paired-end Read 2 reads to SRR005_2_val_2.fq.gz

Total number of sequences analysed: 10000

Number of sequence pairs removed because at least one read was shorter than the length cutoff (20 bp): 4 (0.04%)


  >>> Now running FastQC on the validated data SRR005_1_val_1.fq.gz<<<

application/gzip
Started analysis of SRR005_1_val_1.fq.gz
Approx 10% complete for SRR005_1_val_1.fq.gz
Approx 20% complete for SRR005_1_val_1.fq.gz
Approx 30% complete for SRR005_1_val_1.fq.gz
Approx 40% complete for SRR005_1_val_1.fq.gz
Approx 50% complete for SRR005_1_val_1.fq.gz
Approx 60% complete for SRR005_1_val_1.fq.gz
Approx 70% complete for SRR005_1_val_1.fq.gz
Approx 80% complete for SRR005_1_val_1.fq.gz
Approx 90% complete for SRR005_1_val_1.fq.gz
Analysis complete for SRR005_1_val_1.fq.gz

  >>> Now running FastQC on the validated data SRR005_2_val_2.fq.gz<<<

application/gzip
Started analysis of SRR005_2_val_2.fq.gz
Approx 10% complete for SRR005_2_val_2.fq.gz
Approx 20% complete for SRR005_2_val_2.fq.gz
Approx 30% complete for SRR005_2_val_2.fq.gz
Approx 40% complete for SRR005_2_val_2.fq.gz
Approx 50% complete for SRR005_2_val_2.fq.gz
Approx 60% complete for SRR005_2_val_2.fq.gz
Approx 70% complete for SRR005_2_val_2.fq.gz
Approx 80% complete for SRR005_2_val_2.fq.gz
Approx 90% complete for SRR005_2_val_2.fq.gz
Analysis complete for SRR005_2_val_2.fq.gz
Deleting both intermediate output files SRR005_1_trimmed.fq.gz and SRR005_2_trimmed.fq.gz

====================================================================================================

