Multicore support not enabled. Proceeding with single-core trimming.
Path to Cutadapt set as: 'cutadapt' (default)
Cutadapt seems to be working fine (tested command 'cutadapt --version')
Cutadapt version: 4.9
single-core operation.
igzip command line interface 2.31.0
igzip detected. Using igzip for decompressing

No quality encoding type selected. Assuming that the data provided uses Sanger encoded Phred scores (default)



AUTO-DETECTING ADAPTER TYPE
===========================
Attempting to auto-detect adapter type from the first 1 million sequences of the first file (>> SRR002_1.fastq.gz <<)

Found perfect matches for the following adapter sequences:
Adapter type	Count	Sequence	Sequences analysed	Percentage
Illumina	3	AGATCGGAAGAGC	10000	0.03
smallRNA	0	TGGAATTCTCGG	10000	0.00
Nextera	0	CTGTCTCTTATA	10000	0.00
Using Illumina adapter for trimming (count: 3). Second best hit was smallRNA (count: 0)

Writing report to 'SRR002_1.fastq.gz_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: SRR002_1.fastq.gz
Trimming mode: paired-end
Trim Galore version: 0.6.10
Cutadapt version: 4.9
Number of cores used for trimming: 1
Quality Phred score cutoff: 20
Quality encoding type selected: ASCII+33
Adapter sequence: 'AGATCGGAAGAGC' (Illumina TruSeq, Sanger iPCR; auto-detected)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 20 bp
Running FastQC on the data once trimming has completed
Output file(s) will be GZIP compressed

Cutadapt seems to be fairly up-to-date (version 4.9). Setting -j 1
Writing final adapter and quality trimmed output to SRR002_1_trimmed.fq.gz


  >>> Now performing quality (cutoff '-q 20') and adapter trimming in a single pass for the adapter sequence: 'AGATCGGAAGAGC' from file SRR002_1.fastq.gz <<< 
This is cutadapt 4.9 with Python 3.12.7
Command line parameters: -j 1 -e 0.1 -q 20 -O 1 -a AGATCGGAAGAGC SRR002_1.fastq.gz
Processing single-end reads on 1 core ...
Finished in 0.187 s (18.669 µs/read; 3.21 M reads/minute).

=== Summary ===

Total reads processed:                  10,000
Reads with adapters:                     3,143 (31.4%)
Reads written (passing filters):        10,000 (100.0%)

Total basepairs processed:       280,000 bp
Quality-trimmed:                     227 bp (0.1%)
Total written (filtered):        274,737 bp (98.1%)

=== Adapter 1 ===

Sequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 3143 times

Minimum overlap: 1
No. of allowed errors:
1-9 bp: 0; 10-13 bp: 1

Bases preceding removed adapters:
  A: 34.4%
  C: 31.5%
  G: 22.0%
  T: 12.2%
  none/other: 0.0%

Overview of removed sequences
length	count	expect	max.err	error counts
1	1889	2500.0	0	1889
2	718	625.0	0	718
3	479	156.2	0	479
4	50	39.1	0	50
5	1	9.8	0	1
6	1	2.4	0	1
8	1	0.2	0	1
9	1	0.0	0	1
14	1	0.0	1	1
15	1	0.0	1	1
17	1	0.0	1	1

RUN STATISTICS FOR INPUT FILE: SRR002_1.fastq.gz
=============================================
10000 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Writing report to 'SRR002_2.fastq.gz_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: SRR002_2.fastq.gz
Trimming mode: paired-end
Trim Galore version: 0.6.10
Cutadapt version: 4.9
Number of cores used for trimming: 1
Quality Phred score cutoff: 20
Quality encoding type selected: ASCII+33
Adapter sequence: 'AGATCGGAAGAGC' (Illumina TruSeq, Sanger iPCR; auto-detected)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 20 bp
Running FastQC on the data once trimming has completed
Output file(s) will be GZIP compressed

Cutadapt seems to be fairly up-to-date (version 4.9). Setting -j -j 1
Writing final adapter and quality trimmed output to SRR002_2_trimmed.fq.gz


  >>> Now performing quality (cutoff '-q 20') and adapter trimming in a single pass for the adapter sequence: 'AGATCGGAAGAGC' from file SRR002_2.fastq.gz <<< 
This is cutadapt 4.9 with Python 3.12.7
Command line parameters: -j 1 -e 0.1 -q 20 -O 1 -a AGATCGGAAGAGC SRR002_2.fastq.gz
Processing single-end reads on 1 core ...
Finished in 0.481 s (48.128 µs/read; 1.25 M reads/minute).

=== Summary ===

Total reads processed:                  10,000
Reads with adapters:                     4,879 (48.8%)
Reads written (passing filters):        10,000 (100.0%)

Total basepairs processed:       940,000 bp
Quality-trimmed:                   3,109 bp (0.3%)
Total written (filtered):        929,429 bp (98.9%)

=== Adapter 1 ===

Sequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 4879 times

Minimum overlap: 1
No. of allowed errors:
1-9 bp: 0; 10-13 bp: 1

Bases preceding removed adapters:
  A: 63.4%
  C: 14.3%
  G: 10.5%
  T: 11.8%
  none/other: 0.0%

Overview of removed sequences
length	count	expect	max.err	error counts
1	4104	2500.0	0	4104
2	530	625.0	0	530
3	125	156.2	0	125
4	38	39.1	0	38
5	12	9.8	0	12
6	7	2.4	0	7
7	2	0.6	0	2
8	6	0.2	0	6
9	4	0.0	0	4
10	2	0.0	1	0 2
12	2	0.0	1	0 2
14	7	0.0	1	3 4
15	1	0.0	1	1
17	3	0.0	1	1 2
18	1	0.0	1	1
19	10	0.0	1	10
22	1	0.0	1	0 1
23	1	0.0	1	0 1
24	4	0.0	1	2 2
27	3	0.0	1	1 2
30	2	0.0	1	0 2
31	1	0.0	1	1
36	2	0.0	1	1 1
39	1	0.0	1	1
47	1	0.0	1	1
68	1	0.0	1	1
70	1	0.0	1	1
71	1	0.0	1	1
74	1	0.0	1	1
75	1	0.0	1	1
80	1	0.0	1	1
81	1	0.0	1	1
82	1	0.0	1	1
83	1	0.0	1	1

RUN STATISTICS FOR INPUT FILE: SRR002_2.fastq.gz
=============================================
10000 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Validate paired-end files SRR002_1_trimmed.fq.gz and SRR002_2_trimmed.fq.gz
file_1: SRR002_1_trimmed.fq.gz, file_2: SRR002_2_trimmed.fq.gz


>>>>> Now validing the length of the 2 paired-end infiles: SRR002_1_trimmed.fq.gz and SRR002_2_trimmed.fq.gz <<<<<
Writing validated paired-end Read 1 reads to SRR002_1_val_1.fq.gz
Writing validated paired-end Read 2 reads to SRR002_2_val_2.fq.gz

Total number of sequences analysed: 10000

Number of sequence pairs removed because at least one read was shorter than the length cutoff (20 bp): 6 (0.06%)


  >>> Now running FastQC on the validated data SRR002_1_val_1.fq.gz<<<

application/gzip
Started analysis of SRR002_1_val_1.fq.gz
Approx 10% complete for SRR002_1_val_1.fq.gz
Approx 20% complete for SRR002_1_val_1.fq.gz
Approx 30% complete for SRR002_1_val_1.fq.gz
Approx 40% complete for SRR002_1_val_1.fq.gz
Approx 50% complete for SRR002_1_val_1.fq.gz
Approx 60% complete for SRR002_1_val_1.fq.gz
Approx 70% complete for SRR002_1_val_1.fq.gz
Approx 80% complete for SRR002_1_val_1.fq.gz
Approx 90% complete for SRR002_1_val_1.fq.gz
Analysis complete for SRR002_1_val_1.fq.gz

  >>> Now running FastQC on the validated data SRR002_2_val_2.fq.gz<<<

application/gzip
Started analysis of SRR002_2_val_2.fq.gz
Approx 10% complete for SRR002_2_val_2.fq.gz
Approx 20% complete for SRR002_2_val_2.fq.gz
Approx 30% complete for SRR002_2_val_2.fq.gz
Approx 40% complete for SRR002_2_val_2.fq.gz
Approx 50% complete for SRR002_2_val_2.fq.gz
Approx 60% complete for SRR002_2_val_2.fq.gz
Approx 70% complete for SRR002_2_val_2.fq.gz
Approx 80% complete for SRR002_2_val_2.fq.gz
Approx 90% complete for SRR002_2_val_2.fq.gz
Analysis complete for SRR002_2_val_2.fq.gz
Deleting both intermediate output files SRR002_1_trimmed.fq.gz and SRR002_2_trimmed.fq.gz

====================================================================================================

